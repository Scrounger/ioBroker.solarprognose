{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.5\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from '@iobroker/adapter-core';\n\n// Load your modules here, e.g.:\nimport * as myTypes from './lib/myTypes';\n\nclass Solarprognose extends utils.Adapter {\n\ttestMode = true;\n\tapiEndpoint = 'https://www.solarprognose.de/web/solarprediction/api/v1';\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'solarprognose',\n\t\t});\n\t\tthis.on('ready', this.onReady.bind(this));\n\t\tthis.on('stateChange', this.onStateChange.bind(this));\n\t\t// this.on('objectChange', this.onObjectChange.bind(this));\n\t\t// this.on('message', this.onMessage.bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\tconst logPrefix = '[onReady]:';\n\n\t\ttry {\n\t\t\t// Initialize your adapter here\n\n\t\t\tawait this.updateData();\n\n\t\t} catch (error: any) {\n\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Here you must clear all timeouts or intervals that may still be active\n\t\t\t// clearTimeout(timeout1);\n\t\t\t// clearTimeout(timeout2);\n\t\t\t// ...\n\t\t\t// clearInterval(interval1);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t// \tif (typeof obj === 'object' && obj.message) {\n\t// \t\tif (obj.command === 'send') {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info('send command');\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, 'Message received', obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tprivate async updateData(): Promise<void> {\n\t\tconst logPrefix = '[updateData]:';\n\n\t\ttry {\n\t\t\tif (this.config.project && this.config.accessToken) {\n\t\t\t\tconst url = `${this.apiEndpoint}?access-token=${this.config.accessToken}&project=${this.config.project}&type=hourly&_format=json`;\n\t\t\t\tconst data = await this.downloadData(url);\n\n\t\t\t\tthis.log.silly(JSON.stringify(data));\n\n\t\t\t\tif (data) {\n\t\t\t\t\tif (data.status === 0) {\n\n\t\t\t\t\t\tif (data.data) {\n\t\t\t\t\t\t\tlet jsonResult: Array<myTypes.myJsonStructure> = [];\n\t\t\t\t\t\t\tfor (const [timestamp, arr] of Object.entries(data.data)) {\n\t\t\t\t\t\t\t\tjsonResult.push({\n\t\t\t\t\t\t\t\t\ttimestamp: parseInt(timestamp),\n\t\t\t\t\t\t\t\t\tval: arr[0],\n\t\t\t\t\t\t\t\t\ttotal: arr[1]\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tawait this.createOrUpdateState(this.namespace, myTypes.stateDefinition['json'], JSON.stringify(jsonResult), 'json');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.log.error(`${logPrefix} received data has no forecast data!`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.log.error(`${logPrefix} data received with error code: ${data.status}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.error(`${logPrefix} no data received!`);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tthis.log.error(`${logPrefix} project and / or access token missing. Please check your adapter configuration!`);\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t}\n\t}\n\n\tprivate async downloadData(url: string): Promise<myTypes.dataStructure | undefined> {\n\t\tconst logPrefix = '[downloadData]:';\n\n\t\ttry {\n\t\t\tif (!this.testMode) {\n\t\t\t\tconst response: any = await fetch(url);\n\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tthis.log.debug(`${logPrefix} data successfully received`);\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.error(`${logPrefix} status code: ${response.status}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.log.warn(`${logPrefix} Test mode is active!`);\n\n\t\t\t\tconst objects = require('../test/testData.json');\n\t\t\t\treturn objects;\n\t\t\t}\n\t\t} catch (error: any) {\n\t\t\tthis.log.error(`${logPrefix} error: ${error}, stack: ${error.stack}`);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate async createOrUpdateState(idChannel: string, stateDef: myTypes.tStateDefinition, val: string | number, key: string): Promise<boolean> {\n\t\tconst logPrefix = '[createOrUpdateState]:';\n\n\t\ttry {\n\t\t\tconst id = `${idChannel}.${stateDef.id}`\n\n\t\t\t// stateDef.common.name = this.getTranslation(key);\n\n\t\t\tif (stateDef.common.unit && Object.prototype.hasOwnProperty.call(this.config, stateDef.common.unit)) {\n\t\t\t\t//@ts-ignore\n\t\t\t\tstateDef.common.unit = this.getTranslation(this.config[stateDef.common.unit]) || stateDef.common.unit\n\t\t\t}\n\n\t\t\tif (!await this.objectExists(id)) {\n\t\t\t\tthis.log.debug(`${logPrefix} creating state '${id}'`);\n\n\t\t\t\tconst obj = {\n\t\t\t\t\ttype: 'state',\n\t\t\t\t\tcommon: stateDef.common,\n\t\t\t\t\tnative: {}\n\t\t\t\t};\n\n\t\t\t\t//@ts-ignore\n\t\t\t\tawait this.setObjectAsync(id, obj);\n\t\t\t} else {\n\t\t\t\t// update State if needed\n\t\t\t\tconst obj = await this.getObjectAsync(id);\n\n\t\t\t\tif (obj && obj.common) {\n\t\t\t\t\tif (JSON.stringify(obj.common) !== JSON.stringify(stateDef.common)) {\n\t\t\t\t\t\tawait this.extendObject(id, { common: stateDef.common });\n\t\t\t\t\t\tthis.log.debug(`${logPrefix} updated common properties of state '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet changedObj: any = undefined;\n\n\t\t\tchangedObj = await this.setStateChangedAsync(id, val, true);\n\n\t\t\tif (changedObj && Object.prototype.hasOwnProperty.call(changedObj, 'notChanged') && !changedObj.notChanged) {\n\t\t\t\tthis.log.silly(`${logPrefix} value of state '${id}' changed`);\n\t\t\t\treturn !changedObj.notChanged\n\t\t\t}\n\t\t} catch (err: any) {\n\t\t\tconsole.error(`${logPrefix} error: ${err.message}, stack: ${err.stack}`);\n\t\t}\n\n\t\treturn false;\n\t}\n\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Solarprognose(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Solarprognose())();\n}"],
  "mappings": "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",
  "names": []
}

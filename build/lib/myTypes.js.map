{
  "version": 3,
  "sources": ["../../src/lib/myTypes.ts"],
  "sourcesContent": ["export interface dataStructure {\r\n    preferredNextApiRequestAt: preferredNextApiRequestAt;\r\n    status: number;\r\n    iLastPredictionGenerationEpochTime: number;\r\n    datalinename: string;\r\n    data: { [key: number]: Array<number> } | number\r\n}\r\n\r\nexport interface preferredNextApiRequestAt {\r\n    secondOfHour: number;\r\n    epochTimeUtc: number;\r\n}\r\n\r\nexport interface tStateDefinition {\r\n    id?: string,\r\n    common?: any,\r\n    ignore?: boolean,\r\n}\r\n\r\nexport interface myJsonStructure {\r\n    timestamp: number;\r\n    human: string;\r\n    val: number;\r\n    total: number;\r\n}\r\n\r\nconst commonDef = {\r\n    number: {\r\n        type: 'number',\r\n        read: true,\r\n        write: false,\r\n        role: 'value',\r\n        def: null\r\n    },\r\n    string: {\r\n        type: 'string',\r\n        read: true,\r\n        write: false,\r\n        role: 'value',\r\n        def: null\r\n    }\r\n}\r\n\r\nexport const stateDefinition: { [key: string]: tStateDefinition; } = {\r\n    statusResponse: {\r\n        id: 'status',\r\n        common: {\r\n            ...commonDef.number, ... {\r\n                name: 'api status response',\r\n                states: {\r\n                    0: \"OK\",\r\n                    \"-2\": \"INVALID ACCESS TOKEN\",\r\n                    \"-3\": \"MISSING PARAMETER ACCESS TOKEN\",\r\n                    \"-4\": \"EMPTY PARAMETER ACCESS TOKEN\",\r\n                    \"-5\": \"INVALID TYPE\",\r\n                    \"-6\": \"MISSING TYPE\",\r\n                    \"-7\": \"INVALID ID\",\r\n                    \"-8\": \"ACCESS DENIED\",\r\n                    \"-9\": \"INVALID ITEM\",\r\n                    \"-10\": \"INVALID TOKEN\",\r\n                    \"-11\": \"NO SOLAR DATA AVAILABLE\",\r\n                    \"-12\": \"NO DATA\",\r\n                    \"-13\": \"INTERNAL ERROR\",\r\n                    \"-14\": \"UNKNOWN ERROR\",\r\n                    \"-15\": \"INVALID START DAY\",\r\n                    \"-16\": \"INVALID END DAY\",\r\n                    \"-17\": \"INVALID DAY\",\r\n                    \"-18\": \"INVALID WEATHER SERVICE ID\",\r\n                    \"-19\": \"DAILY QUOTA EXCEEDED\",\r\n                    \"-20\": \"INVALID OR MISSING ELEMENT ITEM\",\r\n                    \"-21\": \"NO PARAMETER\",\r\n                    \"-22\": \"INVALID PERIOD\",\r\n                    \"-23\": \"INVALID START EPOCH TIME\",\r\n                    \"-24\": \"INVALID END EPOCH TIME\",\r\n                    \"-25\": \"ACCESS DENIED TO ITEM DUE TO LIMIT\",\r\n                    \"-26\": \"NO CLEARSKY VALUES\",\r\n                    \"-27\": \"MISSING INPUT ID AND TOKEN\",\r\n                    \"-28\": \"INVALID ALGORITHM\",\r\n                    \"-29\": \"FAILED TO LOAD WEATHER LOCATION ITEM\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    jsonTable: {\r\n        id: 'json',\r\n        common: {\r\n            name: 'json table',\r\n            type: 'json',\r\n            read: true,\r\n            write: false,\r\n            role: 'json',\r\n            def: '{}'\r\n        },\r\n    },\r\n    lastUpdate: {\r\n        id: 'lastUpdate',\r\n        common: commonDef.string\r\n    },\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA,MAAM,YAAY;AAAA,EACd,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,EACT;AAAA,EACA,QAAQ;AAAA,IACJ,MAAM;AAAA,IACN,MAAM;AAAA,IACN,OAAO;AAAA,IACP,MAAM;AAAA,IACN,KAAK;AAAA,EACT;AACJ;AAEO,MAAM,kBAAwD;AAAA,EACjE,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,QAAQ;AAAA,MACJ,GAAG,UAAU;AAAA,MAAQ,GAAI;AAAA,QACrB,MAAM;AAAA,QACN,QAAQ;AAAA,UACJ,GAAG;AAAA,UACH,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,UACP,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,WAAW;AAAA,IACP,IAAI;AAAA,IACJ,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,MACN,KAAK;AAAA,IACT;AAAA,EACJ;AAAA,EACA,YAAY;AAAA,IACR,IAAI;AAAA,IACJ,QAAQ,UAAU;AAAA,EACtB;AACJ;",
  "names": []
}
